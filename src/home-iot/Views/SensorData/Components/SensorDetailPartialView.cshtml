@model SensorDetailViewModel

<div id=@("sensorDetail" + Model.SensorId)>
    <style>
        .control-label {
            display: inline-block;
            text-align: right;
            padding-right: 5px;
            min-width: 150px;
        }

        .form-control {
            width: 110px;
            display: inline-block
        }
    </style>

    <script>
    domReadyQueue.push(function () {
        $('@("#chartFrom" + Model.SensorId)').keypress(function (e) {
            if (e.keyCode == 13)
                $('#btnLoad').click();
        });
        $('@("#chartTo" + Model.SensorId)').keypress(function (e) {
            if (e.keyCode == 13)
                $('@("#btnLoad" + Model.SensorId)').click();
        });
    });
    </script>

    <h2>
        @Model.SensorName
        <img src="@Model.FavoriteIcon()" title="@Model.FavoriteText()" width="20" height="20" style="display:inline-block; margin-bottom:5px" onclick="favoriteSensor(@Model.SensorId, @((!Model.IsFavorited).ToString().ToLower()), true);" />
    </h2>
    <h3>@Model.SensorDescription</h3>

    <table style="width:100%;table-layout:auto;">
        <colgroup>
            <col style="width:80%" />
            <col style="width:auto" />
            <col style="width:auto" />
        </colgroup>
        <tbody>
            <tr>
                <td rowspan="5">
                    <div id="c">
                        @await Component.InvokeAsync("DataChart", new { sensor = Model.SensorId, from = Model.ChartFrom, to = Model.ChartTo })
                    </div>
                </td>
                <td>
                    @Html.LabelFor(model => model.ActualValue, new { @class = "control-label" })
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ActualValue.Value, "{0:0.#} " + Model.Units.GetText(), new { @class = "form-control", @readonly = "readonly", @style = "width:85px" })
                    <img src="@Model.Trend.GetImage()" title="@Model.Trend.GetText()" width="20" height="20" style="display:inline-block" />
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.TodayMin, new { @class = "control-label " })
                </td>
                <td>
                    @Html.TextBoxFor(model => model.TodayMin.Value, "{0:0.#} " + Model.Units.GetText(), new { @class = "form-control", @readonly = "readonly" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.TodayMax, new { @class = "control-label " })
                </td>
                <td>
                    @Html.TextBoxFor(model => model.TodayMax.Value, "{0:0.#} " + Model.Units.GetText(), new { @class = "form-control", @readonly = "readonly" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.LastConnection, new { @class = "control-label " })
                </td>
                <td>
                    @Html.TextBoxFor(model => model.LastConnection, "{0:dd.MM. hh:mm}", new { @class = "form-control", @readonly = "readonly" })
                </td>
            </tr>
            <tr>
                <td height="110px">&nbsp;</td>
                <td />
            </tr>
            <tr>
                <td>
                    Interval dat:
                    @Html.TextBoxFor(model => model.ChartFrom, "{0:dd.MM.yyyy hh:mm}", new { @class = "form-control", @style = "width:150px", @id = "chartFrom" + Model.SensorId })
                    -
                    @Html.TextBoxFor(model => model.ChartTo, "{0:dd.MM.yyyy hh:mm}", new { @class = "form-control", @style = "width:150px", @id = "chartTo" + Model.SensorId })

                    <button id="@("btnLoad" + @Model.SensorId)" onclick="reloadChart(@Model.SensorId)">Load</button>
                </td>
            </tr>
        </tbody>
    </table>

</div>
